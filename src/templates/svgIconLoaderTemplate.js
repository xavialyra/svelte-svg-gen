// src/templates/svgIconLoaderTemplate.js
export function createSvgIconLoaderComponent() {
    // typeFileNameBase will be like 'IconName' (without .ts)
    return `<script lang="ts">
    // Generated by svg-to-svelte-icons
    import { type ComponentType, type SvelteComponent } from 'svelte';
    import { type SvgName, iconMap } from './SvgName';
    import type { SVGAttributes } from 'svelte/elements';
  
    export let name: SvgName;
  
    interface $$Props extends SVGAttributes<SVGSVGElement> {
      name: SvgName;
    }
  
    let IconComponent: ComponentType<SvelteComponent> | null = null;
    let componentLoaded = false;
    let loadError = false;
  
    $: if (name) {
      componentLoaded = false;
      loadError = false;
      IconComponent = null;
  
      const fileName = iconMap[name];
      import(\`./components/\${fileName}.svelte\`)
        .then((module) => {
          if (module && module.default) {
            IconComponent = module.default;
          } else {
            throw new Error('Invalid module structure');
          }
          componentLoaded = true;
        })
        .catch((error) => {
          console.error(\`Failed to load Svelte icon component: \${name}.svelte\`, error);
          loadError = true;
          componentLoaded = true;
        });
    } else {
      componentLoaded = true;
      loadError = true;
    }
  
  </script>
  
  {#if componentLoaded}
    {#if IconComponent && !loadError}
      <svelte:component this={IconComponent} {...$$restProps} />
    {:else if loadError}
      <!-- Error Indicator -->
      <span role="img" style="color: red; display: inline-block; width: 1em; height: 1em; vertical-align: -0.125em;">
        <svg viewBox="0 0 24 24" fill="currentColor" style="width: 100%; height: 100%;">
          <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/>
        </svg>
      </span>
    {/if}
  {:else if name}
    <span style="display: inline-block; width: 1em; height: 1em; vertical-align: -0.125em;"></span>
  {/if}
  `;
  }